" .vimrc

" vimrc is not vi-compatible
set nocompatible

" Setting up Vundle - the vim plugin bundler

""" Vundle plugin manager {{{
let vundle_first_run=0
let vundle_readme=expand('~/.vim/bundle/Vundle.vim/README.md')
if !filereadable(vundle_readme)
  echo "Installing Vundle..."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/gmarik/Vundle.vim ~/.vim/bundle/Vundle.vim
  let vundle_first_run=1
endif
""" }}}

""" Initialize Vundle {{{
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
""" }}}

""" Put Vundle plugins here {{{
Plugin 'gmarik/Vundle.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'thecodesmith/vim-colorscheme-codesmith'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-ragtag'
Plugin 'godlygeek/tabular'
Plugin 'kchmck/vim-coffee-script'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'Townk/vim-autoclose'
Plugin 'edsono/vim-matchit'
Plugin 'vim-scripts/groovyindent'
""" }}} End Vundle plugins

""" Finalize Vundle
call vundle#end()

""" Installing plugins on first run, quits when done {{{
if vundle_first_run == 1
  :silent! PluginInstall
  :qa
endif
""" }}}

" Finished setting up Vundle

syntax enable
filetype plugin indent on

set term=screen-256color
set guifont=Lucida\ Console
colorscheme codesmith

set tabstop=4
set shiftwidth=4
set expandtab
set softtabstop=4
set nowrap
set backspace=indent,eol,start

set number
set colorcolumn=80
set ruler
set showcmd
set hlsearch
set ignorecase
set incsearch
highlight Search ctermbg=yellow ctermfg=black cterm=NONE

" Configure vim-multiple-cursors
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_quit_key='<Esc>'

" Set the tags file
set tags=tags;

if exists(":Tabularize")
  vnoremap <leader>a :Tabularize<space>/
endif

" Place cursor on indented line between curly braces
inoremap {<CR> {<CR>}<Esc>O

" Go to previous tab
nnoremap gr gT

"Vim only defaults to 3 matches so this is the syntax for the first 2
"highlight any extra white space green
"match ExtraWhitespace /\s\+$\| \+\ze\t/   This will highlight only white
"space at the end of a tab
"Highlight any characters above 120 places red

highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
let s:longlines = 1
function! Match_long_lines()
  if s:longlines == 1
    let s:longlines = 0
    :match ExtraWhitespace /\s\+$\|\t/
    :2match ErrorMsg '\%>120v.\+'
  else
    let s:longlines = 1
    :match
    :2match
  endif
endfunction
nnoremap <F3> :call Match_long_lines()<CR>
inoremap <F3> <Esc>:call Match_long_lines()<CR>a

" F2 now toggles the show line numbers
map <F2> :set invnumber<cr>a
map! <F2> <Esc>:set invnumber<cr>

" F5 now toggles binary mode
map <F5> :%!xxd<cr>a
map <S-F5> <Esc>:%!xxd -r<cr>

" F6 will delete extra spaces at the end of a line and will
"change tabs to spaces
map <F6> :retab<cr>:%s/\s\+$//<cr>:noh<cr>
map! <F6> <Esc>:retab<cr>:%s/\s\+$//<cr>:noh<cr>a

" This was not working on linux
"set clipboard=unnamed
set pastetoggle=<F8>

" Don't lose selection after indent
vnoremap < <gv
vnoremap > >gv

""" Window swapping functions {{{

function! MarkWindowSwap()
  " marked window number
  let g:markedWinNum = winnr()
  let g:markedBufNum = bufnr("%")
endfunction

function! DoWindowSwap()
  let curWinNum = winnr()
  let curBufNum = bufnr("%")
  " Switch focus to marked window
  exe g:markedWinNum . "wincmd w"

  " Load current buffer on marked window
  exe 'hide buf' curBufNum

  " Switch focus to current window
  exe curWinNum . "wincmd w"

  " Load marked buffer on current window
  exe 'hide buf' g:markedBufNum
endfunction

nnoremap <C-h> :call MarkWindowSwap()<CR> <C-w>h :call DoWindowSwap()<CR>
nnoremap <C-j> :call MarkWindowSwap()<CR> <C-w>j :call DoWindowSwap()<CR>
nnoremap <C-k> :call MarkWindowSwap()<CR> <C-w>k :call DoWindowSwap()<CR>
nnoremap <C-l> :call MarkWindowSwap()<CR> <C-w>l :call DoWindowSwap()<CR>

""" End window swapping functions }}}

" Experimental scripts
"autocmd BufWritePost * execute '!deploy.sh'

" TODO List
" tpope/fugitive.vim -- Git plugin
" tpope/surround.vim
" cheat sheet: always be learning 5-7 new things
" setlocal colorcolumn=80
